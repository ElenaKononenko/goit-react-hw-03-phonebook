{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","reset","handleSubmit","preventDefault","props","onSubmit","this","className","s","action","formLabel","htmlFor","formInput","type","placeholder","required","onChange","pattern","Component","ContactList","contacts","onDeleteContact","contactList","map","id","contactListItem","onClick","Filter","filterInput","App","filter","addContactformSubmit","data","find","contact","toLowerCase","toLocaleLowerCase","alert","uui","prev","changeFilter","deleteContact","contactId","handleFilter","includes","contactsLocal","JSON","parse","localStorage","getItem","prevProps","prevState","console","log","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.035dfae7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__ycOKX\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { handleInputChange, handleSubmit } = this;\n\n    return (\n      <form className={s.ContactForm} action=\"\" onSubmit={handleSubmit}>\n        <label className={s.formLabel} name=\"name\" htmlFor=\"\">\n          Name\n          <input\n            className={s.formInput}\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            value={name}\n            required\n            onChange={handleInputChange}\n          />\n        </label>\n        <label className={s.formLabel} name=\"number\" htmlFor=\"\">\n          Number\n          <input\n            className={s.formInput}\n            name=\"number\"\n            type=\"tel\"\n            placeholder=\"000-00-00\"\n            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n            required\n            value={number}\n            onChange={handleInputChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <div>\n      <ul className={s.contactList}>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className={s.contactListItem}>\n            {name}: {number}\n            <button onClick={() => onDeleteContact(id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nclass Filter extends Component {\n  render() {\n    const { value, onChange } = this.props;\n    return (\n      <div>\n        <label>\n          Find contacts by name\n          <input\n            className={s.filterInput}\n            type=\"text\"\n            name=\"filter\"\n            value={value}\n            onChange={onChange}\n          />\n        </label>\n      </div>\n    );\n  }\n}\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport { v4 as uui } from 'uuid';\nimport './index.css';\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n  addContactformSubmit = data => {\n    const { contacts } = this.state;\n    const uniqueName = contacts.find(\n      contact => contact.name.toLowerCase() === data.name.toLocaleLowerCase(),\n    );\n    if (uniqueName) {\n      alert(`${data.name} is already in contacts`);\n    } else {\n      const contact = {\n        id: uui(),\n        name: data.name,\n        number: data.number,\n      };\n      this.setState(prev => ({ contacts: [contact, ...prev.contacts] }));\n    }\n  };\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  deleteContact = contactId => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  handleFilter = () => {\n    const { filter, contacts } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLocaleLowerCase()),\n    );\n\n    // const normolize = filter.toLocaleLowerCase();\n    // return contacts.filter(contact =>\n    //   contact.name.toLowerCase().includes(normolize),\n    // );\n  };\n  componentDidMount() {\n    const contactsLocal = JSON.parse(localStorage.getItem('contacts'));\n    if (contactsLocal) {\n      this.setState({ contacts: contactsLocal });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      console.log(2222);\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  render() {\n    const { filter } = this.state;\n    // const visibleContacts = this.handleFilter();\n    return (\n      <section>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContactformSubmit} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={this.handleFilter()}\n          onDeleteContact={this.deleteContact}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__LbGiA\",\"formLabel\":\"ContactForm_formLabel__3tjak\",\"formInput\":\"ContactForm_formInput__zfMDG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1hC99\",\"contactListItem\":\"ContactList_contactListItem__11WvO\"};"],"sourceRoot":""}